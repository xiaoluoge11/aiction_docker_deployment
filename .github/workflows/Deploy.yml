name: Docker Image CI # Actions名称

on: # 执行时机
  push:
    branches:
      - master 
      - release
env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:
  build:
      runs-on: ubuntu-latest
      steps:
      - name: checkout # 步骤名字
        uses: actions/checkout@master
        
      - name: install
        run: npm install

      - name: build project
        run: npm run build

      - name: Build the Docker image
        run: |
          # 登录阿里云镜像容器
          echo "${{ ALIYUN_REGISTRY_PASSWORD }}" | docker login -u ${{ ALIYUN_REGISTRY_USER }} ${{ ALIYUN_REGISTRY }} --password-stdin
          docker build -t dev-nginx . 
          docker tag dev-nginx registry.cn-guangzhou.aliyuncs.com/${{ALIYUN_NAME_SPAC}}/nginx:latest
          docker push registry.cn-guangzhou.aliyuncs.com/${{ALIYUN_NAME_SPAC}}/nginx:latest
      - name: ssh docker login
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script:  | 
            echo -e "---------登录镜像容器服务--------"
            # 登录阿里云镜像容器服务
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_REGISTRY }} --password-stdin
          
            # 拉取镜像
            docker pull registry.cn-guangzhou.aliyuncs.com/${{ALIYUN_NAME_SPAC}}/nginx:latest
            echo -e "---------创建容器并运行容器--------"
            # -rm: docker会在容器退出时删除与它关联的数据卷
            # -d: 后台运行容器，并返回容器ID
            # -p: 端口映射，本机端口:容器端口
            # --name: 指定容器名称
            # 最后一个为镜像名称
            docker run -d --name dev-nginx -p 8080:80 registry.cn-guangzhou.aliyuncs.com/${{ALIYUN_NAME_SPAC}}/nginx
            echo -e "---------执行完毕--------"
